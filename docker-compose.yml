services:
  ruuter-public:
    container_name: ruuter-public
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:8086,http://localhost:3001,http://localhost:3003,http://localhost:3004,http://localhost:8080,http://localhost:8000
      - application.httpCodesAllowList=200,201,202,400,401,403,500
      - application.internalRequests.allowedIPs=127.0.0.1
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
      - server.port=8086
    volumes:
      - ./DSL/Ruuter.public/DSL:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8086:8086
    networks:
      - bykstack
    cpus: "0.5"
    mem_limit: "512M"

  ruuter-private:
    container_name: ruuter-private
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:3001,http://localhost:8088,http://localhost:3002,http://localhost:3004,http://localhost:8000
      - application.httpCodesAllowList=200,201,202,204,400,401,403,404,500
      - application.internalRequests.allowedIPs=127.0.0.1
      - application.logging.displayRequestContent=true
      - application.incomingRequests.allowedMethodTypes=POST,GET,PUT
      - application.logging.displayResponseContent=true
      - application.logging.printStackTrace=true
      - server.port=8088
    volumes:
      - ./DSL/Ruuter.private/DSL:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8088:8088
    networks:
      - bykstack
    cpus: "0.5"
    mem_limit: "512M"

  data-mapper:
    container_name: data-mapper
    image: data-mapper
    environment:
      - PORT=3000
      - CONTENT_FOLDER=/data
    volumes:
      - ./DSL:/data
      - ./DSL/DMapper/hbs:/workspace/app/views/classifier
      - ./DSL/DMapper/js:/workspace/app/js/classifier
      - ./DSL/DMapper/lib:/workspace/app/lib
    ports:
      - 3000:3000
    networks:
      - bykstack

  tim:
    container_name: tim
    image: tim
    depends_on:
      - tim-postgresql
    environment:
      - SECURITY_ALLOWLIST_JWT=ruuter-private,ruuter-public,data-mapper,resql,tim,tim-postgresql,chat-widget,authentication-layer,127.0.0.1,::1
    ports:
      - 8085:8085
    networks:
      - bykstack
    extra_hosts:
      - "host.docker.internal:host-gateway"
    cpus: "0.5"
    mem_limit: "512M"

  tim-postgresql:
    container_name: tim-postgresql
    image: postgres:14.1
    environment:
      - POSTGRES_USER=tim
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=tim
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./tim-db:/var/lib/postgresql/data
    ports:
      - 9876:5432
    networks:
      - bykstack

  gui:
    container_name: gui
    environment:
      - NODE_ENV=local
      - REACT_APP_RUUTER_API_URL=http://localhost:8086
      - REACT_APP_RUUTER_PRIVATE_API_URL=http://localhost:8088
      - REACT_APP_CUSTOMER_SERVICE_LOGIN=http://localhost:3004/et/dev-auth
      # - REACT_APP_NOTIFICATION_NODE_URL=http://localhost:4040
      - REACT_APP_CSP=upgrade-insecure-requests; default-src 'self'; font-src 'self' data:; img-src 'self' data:; script-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self' http://localhost:8086 http://localhost:8088 http://localhost:8085 http://localhost:4040 http://localhost:3001 http://localhost:8000;
      - DEBUG_ENABLED=true
      - CHOKIDAR_USEPOLLING=true
      - PORT=3001
      - REACT_APP_SERVICE_ID=conversations,settings,monitoring
      - REACT_APP_ENABLE_HIDDEN_FEATURES=TRUE

    build:
      context: ./GUI
      dockerfile: Dockerfile.dev
    ports:
      - 3001:3001
    volumes:
      - /app/node_modules
      - ./GUI:/app
    networks:
      - bykstack
    cpus: "0.5"
    mem_limit: "1G"

  authentication-layer:
    container_name: authentication-layer
    image: authentication-layer
    ports:
      - 3004:3004
    networks:
      - bykstack

  resql:
    container_name: resql
    image: resql
    depends_on:
      - users_db
    environment:
      - sqlms.datasources.[0].name=classifier
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://users_db:5432/classifier #For LocalDb Use
      # sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://171.22.247.13:5433/byk?sslmode=require
      - sqlms.datasources.[0].username=postgres
      - sqlms.datasources.[0].password=rootcode
      - logging.level.org.springframework.boot=INFO
    ports:
      - 8082:8082
    volumes:
      - ./DSL/Resql:/workspace/app/templates/classifier
    networks:
      - bykstack

  users_db:
    container_name: users_db
    image: postgres:14.1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=rootcode
      - POSTGRES_DB=classifier
    ports:
      - 5433:5432
    volumes:
      - /home/ubuntu/user_db_files:/var/lib/postgresql/data
    networks:
      - bykstack
    restart: always

  cron-manager:
    container_name: cron-manager
    image: cron-manager
    volumes:
      - ./DSL/CronManager/DSL:/DSL
      - ./DSL/CronManager/script:/app/scripts
      - ./DSL/CronManager/config:/app/config
    environment:
      - server.port=9010
    ports:
      - 9010:8080
    networks:
      - bykstack

  init:
    image: busybox
    command: ["sh", "-c", "chmod -R 777 /shared"]
    volumes:
      - shared-volume:/shared

  file-handler:
    build:
      context: ./file-handler
      dockerfile: Dockerfile
    container_name: file-handler
    volumes:
      - shared-volume:/shared
    environment:
      - UPLOAD_DIRECTORY=/shared
      - RUUTER_PRIVATE_URL=http://ruuter-private:8088
      - S3_FERRY_URL=http://s3-ferry:3000/v1/files/copy
      - IMPORT_STOPWORDS_URL=http://ruuter-private:8088/classifier/datasetgroup/update/stop-words
      - DELETE_STOPWORDS_URL=http://ruuter-private:8088/classifier/datasetgroup/delete/stop-words
    ports:
      - "8000:8000"
    networks:
      - bykstack
    depends_on:
      - init

  s3-ferry:
    image: s3-ferry:latest
    container_name: s3-ferry
    volumes:
      - shared-volume:/shared
    env_file:
      - config.env
    environment:
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
    ports:
      - "3006:3000"
    depends_on:
      - file-handler
      - init
    networks:
      - bykstack

  dataset-processor:
    build:
      context: ./dataset-processor
      dockerfile: Dockerfile
    container_name: dataset-processor
    environment:
      - RUUTER_PRIVATE_URL=http://ruuter-private:8088
      - GET_VALIDATION_SCHEMA=http://ruuter-private:8088/classifier/datasetgroup/schema
      - FILE_HANDLER_DOWNLOAD_JSON_URL=http://file-handler:8000/datasetgroup/data/download/json
      - FILE_HANDLER_DOWNLOAD_LOCATION_JSON_URL=http://file-handler:8000/datasetgroup/data/download/json/location
      - FILE_HANDLER_STOPWORDS_URL=http://file-handler:8000/datasetgroup/data/download/json/stopwords
      - FILE_HANDLER_IMPORT_CHUNKS_URL=http://file-handler:8000/datasetgroup/data/import/chunk
      - FILE_HANDLER_COPY_CHUNKS_URL=http://file-handler:8000/datasetgroup/data/copy
      - GET_PAGE_COUNT_URL=http://ruuter-private:8088/classifier/datasetgroup/group/data?groupId=dgId&pageNum=1
      - SAVE_JSON_AGGREGRATED_DATA_URL=http://file-handler:8000/datasetgroup/data/import/json
      - DOWNLOAD_CHUNK_URL=http://file-handler:8000/datasetgroup/data/download/chunk
      - STATUS_UPDATE_URL=http://ruuter-private:8088/classifier/datasetgroup/update/preprocess/status
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=esclassifier-test
      - S3_REGION_NAME=eu-west-1
    ports:
      - "8001:8001"
    networks:
      - bykstack
    depends_on:
      - init
      - s3-ferry
      - file-handler

  opensearch-node:
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch-node
    environment:
      - node.name=opensearch-node
      - discovery.seed_hosts=opensearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - plugins.security.disabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - bykstack

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.1
    container_name: opensearch-dashboards
    environment:
      - OPENSEARCH_HOSTS=http://opensearch-node:9200
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - 5601:5601
    networks:
      - bykstack

  notifications-node:
    container_name: notifications-node
    build:
      context: ./notification-server
      dockerfile: Dockerfile
    ports:
      - 4040:4040
    depends_on:
      - opensearch-node
    environment:
      OPENSEARCH_PROTOCOL: http
      OPENSEARCH_HOST: opensearch-node
      OPENSEARCH_PORT: 9200
      OPENSEARCH_USERNAME: admin
      OPENSEARCH_PASSWORD: admin
      PORT: 4040
      REFRESH_INTERVAL: 1000
      CORS_WHITELIST_ORIGINS: http://localhost:3001,http://localhost:3002,http://localhost:3003,http://localhost:3004,http://localhost:8080,http://localhost:8088
      RUUTER_URL: http://ruuter-public:8086
    volumes:
      - /app/node_modules
      - ./notification-server:/app
    networks:
      - bykstack

volumes:
  shared-volume:
  opensearch-data:

networks:
  bykstack:
    name: bykstack
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400