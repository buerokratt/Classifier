declaration:
  call: declare
  version: 0.1
  description: "Description placeholder for 'TOGGLE-SUBSCRIPTION'"
  method: post
  accepts: json
  returns: json
  namespace: classifier
  allowlist:
    body:
      - field: is_connect
        type: boolean
        description: "Body field 'isConnect'"

extract_request_data:
  assign:
    is_connect: ${incoming.body.isConnect}
  next: get_auth_header

get_auth_header:
  call: http.post
  args:
    url: "[#CLASSIFIER_DMAPPER]/hbs/classifier/get_auth_header"
    headers:
      type: json
    body:
      username: "[#JIRA_USERNAME]"
      token: "[#JIRA_API_TOKEN]"
  result: auth_header
  next: check_integration_type

check_integration_type:
  switch:
    - condition: ${is_connect === true}
      next: subscribe_jira
  next: unsubscribe_jira

subscribe_jira:
  call: http.put
  args:
    url: "[#JIRA_CLOUD_DOMAIN]/rest/webhooks/1.0/webhook/[#JIRA_WEBHOOK_ID]"
    headers:
      Authorization: ${auth_header.response.body.val}
    body:
      enabled: true
  result: res
  next: assign_jira_webhook_status

unsubscribe_jira:
  call: http.put
  args:
    url: "[#JIRA_CLOUD_DOMAIN]/rest/webhooks/1.0/webhook/1"
    headers:
      Authorization: ${auth_header.response.body.val}
    body:
      enabled: false
  result: res
  next: assign_jira_webhook_status

assign_jira_webhook_status:
  assign:
    status: ${res.response.body.enabled}
  next: check_jira_webhook_response

check_jira_webhook_response:
  switch:
    - condition: ${200 <= res.response.statusCodeValue && res.response.statusCodeValue < 300}
      next: return_ok
  next: return_bad_request

return_ok:
  status: 200
  return: "webhook service successfully ${status}"
  next: end

return_bad_request:
  status: 400
  return: "Bad Request"
  next: end