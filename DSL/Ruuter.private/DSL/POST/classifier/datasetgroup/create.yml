declaration:
  call: declare
  version: 0.1
  description: "Description placeholder for 'CREATE'"
  method: post
  accepts: json
  returns: json
  namespace: classifier
  allowlist:
    body:
      - field: groupName
        type: string
        description: "Body field 'groupName'"
      - field: majorVersion
        type: integer
        description: "Body field 'majorVersion'"
      - field: minorVersion
        type: integer
        description: "Body field 'minorVersion'"
      - field: patchVersion
        type: integer
        description: "Body field 'patchVersion'"
      - field: latest
        type: boolean
        description: "Body field 'latest'"
      - field: isEnabled
        type: boolean
        description: "Body field 'isEnabled'"
      - field: enableAllowed
        type: boolean
        description: "Body field 'enableAllowed'"
      - field: lastModelTrained
        type: string
        description: "Body field 'lastModelTrained'"
      - field: creationTimestamp
        type: number
        description: "Body field 'creationTimestamp'"
      - field: lastUpdatedTimestamp
        type: number
        description: "Body field 'lastUpdatedTimestamp'"
      - field: lastUsedForTraining
        type: number
        description: "Body field 'lastUsedForTraining'"
      - field: validationStatus
        type: string
        description: "Body field 'validationStatus'"
      - field: validationErrors
        type: json
        description: "Body field 'validationErrors'"
      - field: processedDataAvailable
        type: boolean
        description: "Body field 'processedDataAvailable'"
      - field: rawDataAvailable
        type: boolean
        description: "Body field 'rawDataAvailable'"
      - field: numSamples
        type: integer
        description: "Body field 'numSamples'"
      - field: numPages
        type: integer
        description: "Body field 'numPages'"
      - field: rawDataLocation
        type: string
        description: "Body field 'rawDataLocation'"
      - field: preprocessDataLocation
        type: string
        description: "Body field 'preprocessDataLocation'"
      - field: validationCriteria
        type: json
        description: "Body field 'validationCriteria'"
      - field: classHierarchy
        type: json
        description: "Body field 'classHierarchy'"
      - field: connectedModels
        type: array
        description: "Body field 'connectedModels'"
    headers:
      - field: cookie
        type: string
        description: "Cookie field"

extract_request_data:
  assign:
    group_name: ${incoming.body.groupName}
    major_version: ${incoming.body.majorVersion}
    minor_version: ${incoming.body.minorVersion}
    patch_version: ${incoming.body.patchVersion}
    latest: ${incoming.body.latest === null ? false :incoming.body.latest}
    is_enabled: ${incoming.body.isEnabled === null ? false :incoming.body.isEnabled}
    enable_allowed: ${incoming.body.enableAllowed === null ? false :incoming.body.enableAllowed}
    last_model_trained: ${incoming.body.lastModelTrained === null ? '' :incoming.body.lastModelTrained}
    creation_timestamp: ${incoming.body.creationTimestamp}
    last_updated_timestamp: ${incoming.body.lastUpdatedTimestamp}
    last_used_for_training: ${incoming.body.lastUsedForTraining}
    validation_status: ${incoming.body.validationStatus}
    validation_errors: ${incoming.body.validationErrors}
    processed_data_available: ${incoming.body.processedDataAvailable === null ? false :incoming.body.processedDataAvailable}
    raw_data_available: ${incoming.body.rawDataAvailable === null ? false :incoming.body.rawDataAvailable}
    num_samples: ${incoming.body.numSamples}
    num_pages: ${incoming.body.numPages}
    raw_data_location: ${incoming.body.rawDataLocation}
    preprocess_data_location: ${incoming.body.preprocessDataLocation}
    validation_criteria: ${incoming.body.validationCriteria}
    class_hierarchy: ${incoming.body.classHierarchy}
    connected_models: ${incoming.body.connectedModels}
  next: check_for_request_data

check_for_request_data:
  switch:
    - condition: ${group_name !== null || validation_criteria !=null || class_hierarchy !==null }
      next: create_dataset_group_metadata
  next: return_incorrect_request

create_dataset_group_metadata:
  call: http.post
  args:
    url: "[#CLASSIFIER_RESQL]/insert-dataset-group-metadata"
    body:
      group_name: ${group_name}
      major_version: ${major_version}
      minor_version: ${minor_version}
      patch_version: ${patch_version}
      latest: ${latest}
      is_enabled: ${is_enabled}
      enable_allowed: ${enable_allowed}
      last_model_trained: ${last_model_trained}
      creation_timestamp: ${creation_timestamp}
      last_updated_timestamp: ${last_updated_timestamp}
      last_used_for_training: ${last_used_for_training}
      validation_status: ${validation_status}
      validation_errors: ${JSON.stringify(validation_errors)}
      processed_data_available: ${processed_data_available}
      raw_data_available: ${raw_data_available}
      num_samples: ${num_samples}
      num_pages: ${num_pages}
      raw_data_location: ${raw_data_location}
      preprocess_data_location: ${preprocess_data_location}
      validation_criteria: ${JSON.stringify(validation_criteria)}
      class_hierarchy: ${JSON.stringify(class_hierarchy)}
      connected_models: ${JSON.stringify(connected_models)}
  result: res_dataset
  next: check_status

check_status:
  switch:
    - condition: ${200 <= res_dataset.response.statusCodeValue && res_dataset.response.statusCodeValue < 300}
      next: assign_success_response
  next: assign_fail_response

assign_success_response:
  assign:
    format_res: {
      dgId: '${res_dataset.response.body[0].id}',
      operationSuccessful: true,
    }
  next: return_ok

assign_fail_response:
  assign:
    format_res: {
      dgId: '',
      operationSuccessful: false,
    }
  next: return_bad_request

return_ok:
  status: 200
  return: ${format_res}
  next: end

return_bad_request:
  status: 400
  return: ${format_res}
  next: end

return_incorrect_request:
  status: 400
  return: 'Missing Required Fields'
  next: end
